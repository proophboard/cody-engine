import StateView from "@frontend/app/components/core/StateView";
import FormView from "@frontend/app/components/core/FormView";
import {usePageData} from "@frontend/hooks/use-page-data";
import {<%= serviceNames.className %><%= nsClassName %><%= className %>VORuntimeInfo as RuntimeInfo} from "@app/shared/types/<%= serviceNames.fileName %><%= nsFilename %><%= fileName %>";
import {ViewRuntimeConfig} from "@frontend/app/components/core/views/view-runtime-config";
import {useUser} from "@frontend/hooks/use-user";
import {useGlobalStore} from "@frontend/hooks/use-global-store";
import {merge} from "lodash/fp";
import jexl from "@app/shared/jexl/get-configured-jexl";
import {FormJexlContext} from "@frontend/app/components/core/form/types/form-jexl-context";

type <%= className %>Props = Record<string, string><% if (identifier) { %> & {<%= identifier %>: string}<% } %>;

const <%= className %> = (props: <%= className %>Props & {hidden?: boolean}, config: ViewRuntimeConfig) => {
  const [page] = usePageData();
  const [user] = useUser();
  const [store] = useGlobalStore();

  const jexlCtx: FormJexlContext = {
    routeParams: props,
    user,
    page,
    store,
    data: config.injectedInitialValues,
    mode: config.pageMode === "dialog" ? "dialogView" : "pageView"
  };

  let isHidden = config.isHiddenView;

  const uiSchema = merge({...RuntimeInfo.uiSchema}, config.uiSchemaOverride || {});

  if(!isHidden && typeof uiSchema['ui:hidden'] !== "undefined") {
    if(typeof uiSchema['ui:hidden'] === "string") {
      isHidden = jexl.evalSync(uiSchema['ui:hidden'], jexlCtx);
      delete uiSchema['ui:hidden'];
    } else {
      isHidden = uiSchema['ui:hidden'];
    }
  }

  if(isHidden) {
    return <></>
  }

  const result = config.injectedInitialValues || RuntimeInfo.factory({});

  if(config.viewType === "form") {
    return (
      <FormView
        pageMode={config.pageMode}
        description={{...RuntimeInfo, uiSchema}}
        state={result}
      />
    );
  } else {
    return (
      <StateView
        mode={config.pageMode === "dialog" ? "dialogView" : "pageView"}
        description={{...RuntimeInfo, uiSchema}}
        state={result}
      />
  );
  }
}

export default <%= className %>;

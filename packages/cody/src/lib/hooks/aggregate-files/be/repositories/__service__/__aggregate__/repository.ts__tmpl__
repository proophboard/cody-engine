import {AggregateRepository} from "@server/infrastructure/AggregateRepository";
import applyFunctions from "@server/event-reducers/<%= serviceNames.fileName %>/<%= fileName %>/index";
import {WRITE_MODEL_STREAM} from "@server/infrastructure/configuredEventStore";
import {getConfiguredMultiModelStore} from "@server/infrastructure/configuredMultiModelStore";
import {<%= serviceNames.className %><%= className %>AggregateDesc} from "@app/shared/aggregates/<%= serviceNames.fileName %>/<%= fileName %>.desc";
import {<%= aggregateStateNames.className %>, <%= aggregateStateNames.propertyName %>} from "@app/shared/types/<%= serviceNames.fileName %><%= aggregateStateNames.fileNameWithNamespace %>";
import {eventReducerExtensions} from "@server/extensions/event-reducers";
import {getExternalServiceOrThrow} from "@server/extensions/get-external-service";
import {AuthService} from "@event-engine/infrastructure/auth-service/auth-service";
import {
  INFORMATION_SERVICE_NAME,
  InformationService
} from "@event-engine/infrastructure/information-service/information-service";
import {getConfiguredMessageBox} from "@server/infrastructure/configuredMessageBox";

let repository: AggregateRepository<<%= aggregateStateNames.className %>>;

const factory = (): AggregateRepository<<%= aggregateStateNames.className %>> => {
  if(!repository) {
    const store = getConfiguredMultiModelStore();
    const authService = getExternalServiceOrThrow<AuthService>('AuthService', {});
    const infoService = getExternalServiceOrThrow<InformationService>(INFORMATION_SERVICE_NAME, {});
    const messageBox = getConfiguredMessageBox();

    repository = new AggregateRepository<<%= aggregateStateNames.className %>>(
      store,
      <%= serviceNames.className %><%= className %>AggregateDesc.stream || WRITE_MODEL_STREAM,
      <%= serviceNames.className %><%= className %>AggregateDesc.collection,
      <%= serviceNames.className %><%= className %>AggregateDesc.name,
      <%= serviceNames.className %><%= className %>AggregateDesc.identifier,
      {...applyFunctions, ...eventReducerExtensions},
      <%= aggregateStateNames.propertyName %>,
      authService,
      infoService,
      messageBox
    );
  }

  return repository;
}

export default factory;
